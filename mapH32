#!/bin/bash
# ---------------------------------------------------------------------------
# mapH32 - Generate alias config for hardware
# Copyright 2019, Brett Kelly <bkelly@45drives.com>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.


CHASSIS=$1
DISK_CONTROLLER="3224" 
CONFIG_PATH=/etc

usage(){
	cat << EOF
Usage: mapH16 CHASSIS PCI_ADDRESS PORT_COUNT
EOF
	exit 0
}

read_card(){
    SKIP_SLOT=$4
	PORT_COUNT=$3
	DRIVE_COUNT=4
	CARD=$1
	CARD_ID=$2
	PORT=1
	while [ $PORT -lt $(expr $PORT_COUNT + 1) ];do
		if [ $PORT -eq 3 ];then
			PORT_=5
		elif [ $PORT -eq 4 ];then
			PORT_=6
		elif [ $PORT -eq 5 ];then
			PORT_=3
		elif [ $PORT -eq 6 ];then
			PORT_=4
		else
			PORT_=$PORT
		fi
		t=$((PORT_*4))
		i=1
		while [ $i -lt $(expr $DRIVE_COUNT + 1) ];do
			if [ $PORT -eq 1 ];then
				slot=$i
			elif [ $PORT -eq 2 ];then
				slot=$(expr $i + 4)
			elif [ $PORT -eq 3 ];then
				slot=$(expr $i + 8)
			elif [ $PORT -eq 4 ];then
				slot=$(expr $i + 12)
			elif [ $PORT -eq 5 ];then
				slot=$(expr $i + 16)
			elif [ $PORT -eq 6 ];then
				slot=$(expr $i + 20)
			fi
			if [ $i -eq 1 ];then
				i_=2
			elif [ $i -eq 2 ];then
				i_=1
			else
				i_=$i
			fi
            if [ $slot -ge 16 ] && [ $SKIP_SLOT == "yes" ];then
                if [ $slot -eq 16 ];then
			        :
                else
                    let slot=slot-1
                    echo "alias $CARD-$slot     /dev/disk/by-path/pci-0000:$CARD_ID-sas-phy$(expr $t - $i_)-lun-0" >> $CONFIG_PATH/vdev_id.tmp
                fi
			else
                echo "alias $CARD-$slot     /dev/disk/by-path/pci-0000:$CARD_ID-sas-phy$(expr $t - $i_)-lun-0" >> $CONFIG_PATH/vdev_id.tmp
            fi
            let i=i+1
		done
		let PORT=PORT+1
	done
}

trimconf(){
	TRIM=$1
	echo "$(head -n -$TRIM $CONFIG_PATH/vdev_id.tmp)" > $CONFIG_PATH/vdev_id.tmp
}

if [ $# = 0 ];then
	usage
fi

if [ -e $CONFIG_PATH/vdev_id.conf ];then
        rm -f $CONFIG_PATH/vdev_id.conf
fi

echo "# by-vdev" >> $CONFIG_PATH/vdev_id.conf
echo "# name     fully qualified or base name of device link" >> $CONFIG_PATH/vdev_id.conf
case $CHASSIS in
30)
	CARD1=$(lspci | grep $DISK_CONTROLLER | awk 'NR==1{print $1}')
	CARD2=$(lspci | grep $DISK_CONTROLLER | awk 'NR==2{print $1}')
	read_card 1 $CARD1 6 yes
	read_card 2 $CARD2 6 no
	;;
45)
	CARD1=$(lspci | grep $DISK_CONTROLLER | awk 'NR==1{print $1}')
	CARD2=$(lspci | grep $DISK_CONTROLLER | awk 'NR==2{print $1}')
	CARD3=$(lspci | grep $DISK_CONTROLLER | awk 'NR==3{print $1}')
	read_card 1 $CARD1 4 no ; trimconf 1
	read_card 2 $CARD2 6 yes
	read_card 3 $CARD3 6 no
	;;
60)
	CARD1=$(lspci | grep $DISK_CONTROLLER | awk 'NR==1{print $1}')
	CARD2=$(lspci | grep $DISK_CONTROLLER | awk 'NR==2{print $1}')
	CARD3=$(lspci | grep $DISK_CONTROLLER | awk 'NR==3{print $1}')
	CARD4=$(lspci | grep $DISK_CONTROLLER | awk 'NR==4{print $1}')
	read_card 1 $CARD1 4 no ; trimconf 1
	read_card 2 $CARD2 4 no ; trimconf 1
	read_card 3 $CARD3 6 yes
	read_card 4 $CARD4 6 no
	;;
esac
cat $CONFIG_PATH/vdev_id.tmp >> $CONFIG_PATH/vdev_id.conf
rm -f $CONFIG_PATH/vdev_id.tmp
